add notes and placement word file

// we place a queen in a row check its safety and then place next queen in next row
//iterate through columns to make current queen safe
//backtrack and move the previous queen 1 place right, if current cannot be placed safely at any position in new row

#include <iostream>
using namespace std;

bool safe(int **arr, int x, int y, int n)
{
        for(int i=0;i<x;i++)            //row check
        {
            if(arr[i][y]==1) 
                return false;
        }
        
        int a=x, b=y;
        while(a>=0 && b<n)              //up-right diagonal check
        {
            if(arr[a][b]==1) 
                return false;
            
            a--; 
            b++;
        }
        
         a=x; b=y;
        while(a>=0 && b>=0)             //up-left diagonal check
        {
            if(arr[a][b]==1)
                return false;
            
            a--; 
            b--;
        }
        
        return true;
}

bool nqueens(int n, int row, int **arr)
{
    if(row>=n) 
        return 1;
        

    for(int y=0;y<n;y++)
    {   
        if(safe(arr,row,y,n))
        {   
            arr[row][y]=1;
            if(nqueens(n,row++,arr))
                return true;
             
            
            arr[row][y]=0; //backtracking step
        }
    }
    return false;
}


int main()
{
    int n;
    cin>>n;
    int **arr=new int *[n];
    
    for(int i=0;i<n;i++)
        {
            arr[i] = new int[n];
            for(int j=0;j<n;j++)
           { 
               arr[i][j]=0;
               
           }
            
        }
            
    nqueens(n,0,arr);
    
    for(int i=0;i<n;i++)
       { for(int j=0;j<n;j++)
            {
                cout<<arr[i][j]<<" ";
                
            }
           cout<<endl;
       }
    

    return 0;
}
