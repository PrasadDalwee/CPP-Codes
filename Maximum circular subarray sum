#include<iostream>
#include<climits>
#include<algorithm>
using namespace std;

int main()
{
    int n;
    cin>>n;
    int arr[n];
    
    for(int i =0 ; i<n; i++)
    {
        cin>>arr[i];
    }
    
    int csum=0;
    int mx=0,neg=1;
    
    for(int i=0;i<n;i++)                // calculate total sum
    {
        mx+=arr[i];
        if(arr[i]<0)                      //to check wether all no.s are negative
        {
            neg++;
        }
        arr[i]=-arr[i];
    }
    
              if(neg==n)                           // if all numbers are negative we will have a separate solution
              {
                  for(int i=0; i<n; i++)
                  {
                      mx=max(arr[i],arr[i+1]);       // max sum will be a single element, and the element should be least negative one.
                  }   

                  return 0;
              }
    
    csum=0;
    int mx_neg=INT_MIN;
    
    for(int i=0 ; i<n; i++)                 // to calculate the max sum possible in sign reversed array i.e | max neg. sum |
    {
        csum+=arr[i];
        
        if( csum > mx_neg)
        {
            mx_neg=csum;
        }
        
        if(csum<0)
        {
            csum=0;
        }

    }
    
    cout<<" max sum : "<<mx+mx_neg;        // total sum = max sum - |max neg. sum|, therefore we are |adding max neg| sum to total sum 
                                            //which will cancel out -|max neg sum| and it will give us our max circular sub array sum
    return 0;
}
