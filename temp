#include <iostream>
using namespace std;

void merge(int a, int a_end, int b_end, int arr[])
{
    int b=a_end+1;
    
    int a1=a,b1=b; //two pointer approach
    int length=b_end-a+1;
    int x[length];
    int i=0;
    
    while(a1<=a_end && b1<=b_end)
    {
        if(arr[b1]<arr[a1]) 
        {
            x[i]=arr[b1];
            b1++;
            i++;
        }
        
        else
        {
            x[i]=arr[a1];
            a1++;
            i++;
        }
    }
    

    while(a1<a) 
    {
        x[i]=arr[a1];
        a1++;
        i++;
        
    }
    
    
    while(b1<b) 
    {
        x[i]=arr[b1];
        b1++;
        i++;
    }

    
    for(int c=a,i=0;c<=b_end,i<length;c++,i++)
        arr[c]=x[i];
}

void mergesort( int a, int b, int arr[])
{
    if(b-a==0) return;
    
    mergesort(a,(a+b)/2,arr);
    mergesort((a+b)/2+1,b,arr);
    
    merge(a,(a+b)/2,b,arr);
}

int main()
{
    int n;
    cin>>n;
    int arr[n];
    
    for(int i=0;i<n;i++)
        cin>>arr[i];
        
    mergesort(0,n-1,arr);
    
    for(int i=0;i<n;i++)
        cout<<arr[i];
    
    return 0;
}
